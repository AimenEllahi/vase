/*
Auto-generated by: https://github.com/pmndrs/gltfjsx
Command: npx gltfjsx@6.5.0 concrete_1050mm.glb 
*/

import React from "react";
import { useGLTF, Text } from "@react-three/drei";
import { useControls } from "leva";
import * as THREE from "three";

export default function Model(props) {
  const { nodes, materials } = useGLTF("/concrete_1050mm.glb");
  const { leftLength, rightLength } = useControls({
    leftLength: { value: 5, min: 5, max: 20 },
    rightLength: { value: 5, min: 5, max: 20 },
  });

  // Left Line Geometry
  const leftLineGeometry = new THREE.BufferGeometry().setFromPoints([
    new THREE.Vector3(leftLength * 2, 0, 0), // Start point (relative to center)
    new THREE.Vector3(0.3, 0, 0), // End point (at center)
  ]);

  // Right Line Geometry
  const rightLineGeometry = new THREE.BufferGeometry().setFromPoints([
    new THREE.Vector3(-rightLength * 2, 0, 0), // Start point (relative to center)
    new THREE.Vector3(-0.3, 0, 0), // End point (at center)
  ]);

  // Arrowhead Geometry
  const arrowGeometry = new THREE.ConeGeometry(0.1, 0.5, 8);

  return (
    <group {...props} dispose={null}>
      <group
        position-x={leftLength - rightLength}
        scale={[leftLength + rightLength, 10, 10]}
      >
        <mesh
          material-transparent={true}
          material-opacity={0.5}
          geometry={nodes.Cube.geometry}
          material={materials["Material.003"]}
          scale={[1, 0.25, 1.05]}
        />
      </group>
      <group position={[0, 3, 11]}>
        <group>
          <line geometry={leftLineGeometry}>
            <lineBasicMaterial attach='material' color={"black"} />
          </line>
          {/* Left Arrowhead */}
          <mesh
            geometry={arrowGeometry}
            position={[-rightLength * 2, 0, 0]} // Position at the end of the left line
            rotation={[0, 0, Math.PI / 2]} // Pointing towards the center
          >
            <meshBasicMaterial color={"black"} />
          </mesh>
          <mesh
            geometry={arrowGeometry}
            position={[-0.3, 0, 0]} // Position at the end of the left line
            rotation={[0, 0, -Math.PI / 2]} // Pointing towards the center
          >
            <meshBasicMaterial color={"black"} />
          </mesh>

          <Text
            position={[-rightLength, 0.5, 0]} // Position below the left line
            fontSize={0.5}
            color='black'
            anchorX='center'
            anchorY='middle'
          >
            {(rightLength.toFixed(0) * 0.2 * 505).toFixed(0)}mm
          </Text>
        </group>
        <group>
          {/* Right Line */}
          <line geometry={rightLineGeometry}>
            <lineBasicMaterial attach='material' color={"black"} />
          </line>

          <mesh
            geometry={arrowGeometry}
            position={[leftLength * 2, 0, 0]} // Position at the end of the right line
            rotation={[0, 0, -Math.PI / 2]} // Pointing towards the center
          >
            <meshBasicMaterial color={"black"} />
          </mesh>
          <mesh
            geometry={arrowGeometry}
            position={[0.3, 0, 0]} // Position at the end of the right line
            rotation={[0, 0, Math.PI / 2]} // Pointing towards the center
          >
            <meshBasicMaterial color={"black"} />
          </mesh>
          <Text
            position={[leftLength, 0.5, 0]} // Position below the left line
            fontSize={0.5}
            color='black'
            anchorX='center'
            anchorY='middle'
          >
            {(leftLength.toFixed(0) * 0.2 * 505).toFixed(0)}mm
          </Text>
        </group>
      </group>
    </group>
  );
}

useGLTF.preload("/concrete_1050mm.glb");
